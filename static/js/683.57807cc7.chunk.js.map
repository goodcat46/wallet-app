{"version":3,"file":"static/js/683.57807cc7.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","param","height","width","redraw","type","plugins","currentDataset","find","fallbackContent","updateMode","destroy","useEffect","config","setTimeout","update","canvas","dataset","role","Chart","forwardRef","createTypedChart","registerables","ref","register","Line","setOptions","LineController","Bar","value","map","nextDataset","BarController","Radar","RadarController","defaultDatasetIdKey","DoughnutController","current","reforwardRef","PolarArea","PolarAreaController","chart","nextOptions","Object","Scatter","assign","options","setLabels","currentData","nextLabels","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply","this","noop","uid","id","isNullOrUndef","isArray","Array","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_element","afterInit","_args","afterDraw","_willRender","afterEvent","handleEvent","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}