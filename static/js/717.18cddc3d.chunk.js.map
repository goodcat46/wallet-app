{"version":3,"file":"static/js/717.18cddc3d.chunk.js","mappings":"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","sources":["webpack://wallet-app/./src/components/StatisticsTable/StatisticsTable.module.scss?f416","components/StatisticsTable/RowStatComponent/RowStatComponent.jsx","components/StatisticsTable/StatisticsTable.jsx","webpack://wallet-app/./src/components/StatisticsChart/StatisticChart.module.scss?8712","components/StatisticsChart/StatisticsChart.jsx","webpack://wallet-app/./src/components/DateSelect/DateSelect.module.scss?d4b0","components/DateSelect/DateSelect.jsx","webpack://wallet-app/./src/components/Pages/StatisticsPage/StatisticsPage.module.scss?98fb","components/Pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"StatisticsTable_table__yiYU9\",\"wrapper\":\"StatisticsTable_wrapper__wDkD-\",\"thead\":\"StatisticsTable_thead__4BbBy\",\"thedTitl\":\"StatisticsTable_thedTitl__mNIVH\",\"tbody\":\"StatisticsTable_tbody__UDAoE\",\"colName\":\"StatisticsTable_colName__iERCd\",\"colData\":\"StatisticsTable_colData__FR-5F\",\"colored\":\"StatisticsTable_colored__KhgA3\",\"divData\":\"StatisticsTable_divData__aUV5h\",\"tbodyRow\":\"StatisticsTable_tbodyRow__qJAcl\",\"botomTd\":\"StatisticsTable_botomTd__JkoMH\",\"botomTdExpense\":\"StatisticsTable_botomTdExpense__sfDrL\",\"tblList\":\"StatisticsTable_tblList__duG3P\",\"tblItem\":\"StatisticsTable_tblItem__7RTPt\",\"botomExpense\":\"StatisticsTable_botomExpense__sFBif\",\"botomIncome\":\"StatisticsTable_botomIncome__xTzj9\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { BASE_COLORS } from '../../../constans/constans';\nimport scss from '../StatisticsTable.module.scss';\n\nconst RowStatComponent = ({ data }) => {\n  return data.map(({ name, total, type }, idx) => {\n    const value = total.toString().slice(1);\n\n    return (\n      <tr key={idx} className={scss.tbodyRow}>\n        <td className={[scss.colName, scss[`col-${idx + 1}`]].join(' ')}>\n          <div\n            style={{ backgroundColor: BASE_COLORS[idx] }}\n            className={[scss.colored, scss[`colored-${idx + 1}`]].join(' ')}\n          ></div>\n          <div className={scss.divData}>{name}</div>\n        </td>\n        <td className={[scss.colData, scss[`col-${idx + 1}`]].join(' ')}>\n          {value}\n        </td>\n      </tr>\n    );\n  });\n};\n// RowStatComponent.propTypes = {\n//   labels: PropTypes.arrayOf(PropTypes.string),\n//   backgroundColor: PropTypes.arrayOf(PropTypes.string),\n//   data: PropTypes.arrayOf(PropTypes.number),\n// };\nexport default RowStatComponent;\n","import React from 'react';\nimport RowStatComponent from './RowStatComponent/RowStatComponent';\n\nimport scss from './StatisticsTable.module.scss';\n\nconst StatisticsTable = ({ statData }) => {\n  const {\n    expenseSummary,\n    incomeSummary,\n    preparedArray: categoriesSummary,\n  } = statData;\n\n  return (\n    <div className={scss.container}>\n      <div className={scss.wrapper}>\n        <table className={scss.table}>\n          <thead className={scss.thead}>\n            <tr className={scss.theadRow}>\n              <th className={scss.thedTitl}>Category</th>\n              <th className={scss.thedTitl}>Sum</th>\n            </tr>\n          </thead>\n          <tbody className={scss.tbody}>\n            <RowStatComponent data={categoriesSummary} />\n          </tbody>\n        </table>\n        <ul className={scss.tblList}>\n          <li className={scss.tblItem}>\n            <p className={scss.botomName}>Expenses:</p>\n            <p className={[scss.botomSum, scss.botomExpense].join(' ')}>\n              {expenseSummary}\n            </p>\n          </li>\n          <li className={scss.tblItem}>\n            <p className={scss.botomName}>Income:</p>\n            <p className={[scss.botomSum, scss.botomIncome].join(' ')}>\n              {incomeSummary}\n            </p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"noStatMessage\":\"StatisticChart_noStatMessage__SJCi4\"};","import { useState, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport scss from 'components/StatisticsChart/StatisticChart.module.scss';\n\nimport { BASE_COLORS } from '../../constans/constans';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst options = {\n  cutout: '70%',\n};\n\nexport default function StatisticsChart({\n  statChartData = {},\n  periodTotal = 0,\n  expenseSummary = 0,\n}) {\n  const [data, setData] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('');\n  const [labels, setLabels] = useState('');\n  const expenseValue =\n    expenseSummary !== 0 ? expenseSummary.toString().slice(1) : 0;\n\n  const donut = {\n    labels: labels,\n    datasets: [\n      {\n        label: '# of Votes',\n        data: data,\n        backgroundColor: backgroundColor,\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  useEffect(() => {\n    const nameArr = statChartData.map(item => item.total);\n    const colorsArr = statChartData.map((_, index) => BASE_COLORS[index]);\n    const labelsArr = statChartData.map(item => item.name);\n    setData(nameArr);\n    setBackgroundColor(colorsArr);\n    setLabels(labelsArr);\n  }, [statChartData, periodTotal]);\n\n  const plugins = [\n    {\n      beforeDraw: function (chart) {\n        const width = chart.width,\n          height = chart.height,\n          ctx = chart.ctx;\n        ctx.restore();\n        const fontSize = (height / 160).toFixed(2);\n        ctx.font = fontSize + 'em sans-serif';\n        ctx.textBaseline = 'top';\n        const text = `₴ ${expenseValue} `,\n          textX = Math.round((width - ctx.measureText(text).width) / 2),\n          textY = height / 2.2;\n        ctx.fillText(text, textX, textY);\n        ctx.save();\n      },\n    },\n  ];\n  if (periodTotal === 0) {\n    return <h2 className={scss.noStatMessage}>No statistic information</h2>;\n  }\n\n  return (\n    <Doughnut plugins={plugins} options={options} redraw={true} data={donut} />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"selectWrapper\":\"DateSelect_selectWrapper__dvNA8\",\"select\":\"DateSelect_select__pSMb4\",\"selectHeader\":\"DateSelect_selectHeader__Rrwkw\",\"isChosen\":\"DateSelect_isChosen__1hJ+R\",\"selectIcon\":\"DateSelect_selectIcon__5MX+p\",\"selectBody\":\"DateSelect_selectBody__NO90N\",\"isActive\":\"DateSelect_isActive__Rzkml\",\"selectItem\":\"DateSelect_selectItem__e3X54\",\"hiddenInput\":\"DateSelect_hiddenInput__t91xQ\"};","import { useState } from 'react';\nimport css from 'components/DateSelect/DateSelect.module.scss';\nimport { sprite } from 'assets/images';\nimport { MONTH, MONTH_NAMES } from 'constans/constans';\n\nimport { YEARS } from 'constans/constans';\nimport { useDispatch } from 'react-redux';\nimport { financeOperation } from 'redux/finance';\nimport { useEffect } from 'react';\n\nconst DateSelect = () => {\n  const [selectMonthActive, setSelectMonthActive] = useState(false);\n  const [selectYearActive, setSelectYearActive] = useState(false);\n  const [hiddenMonthValue, setHiddenMonthValue] = useState('');\n  const [hiddenYearValue, setHiddenYearValue] = useState('');\n  const dispatch = useDispatch();\n\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth() + 1;\n  const getCurrentMonth = MONTH.getKeyByValue(currentMonth);\n  const currentYear = currentDate.getFullYear();\n\n  const toggleMonthClass = () => {\n    setSelectMonthActive(!selectMonthActive);\n  };\n  const toggleYearClass = () => {\n    setSelectYearActive(!selectYearActive);\n  };\n\n  const handleHiddenMonthValue = event => {\n    const value = event.target.id;\n    setHiddenMonthValue(value);\n  };\n  const handleHiddenYearValue = event => {\n    const value = event.target.textContent;\n    setHiddenYearValue(Number(value));\n  };\n\n  useEffect(() => {\n    const monthNumber = MONTH[hiddenMonthValue];\n\n    if (monthNumber && hiddenYearValue) {\n      dispatch(\n        financeOperation.getSummaryThunk({\n          month: monthNumber,\n          year: hiddenYearValue,\n        })\n      );\n    }\n  }, [dispatch, hiddenMonthValue, hiddenYearValue]);\n\n  return (\n    <>\n      <div className={css.selectWrapper}>\n        <div\n          onClick={toggleMonthClass}\n          className={css.select}\n          tabIndex=\"0\"\n          id=\"month\"\n        >\n          <div\n            className={\n              hiddenMonthValue === 'Month'\n                ? css.selectHeader\n                : [css['selectHeader'], css['isChosen']].join(' ')\n            }\n          >\n            {hiddenMonthValue || getCurrentMonth}\n          </div>\n\n          <svg className={css.selectIcon} width=\"40\" height=\"19\">\n            <use href={sprite + '#icon-select-arrow'}></use>\n          </svg>\n\n          <ul\n            className={\n              selectMonthActive\n                ? [css['selectBody'], css['isActive']].join(' ')\n                : css.selectBody\n            }\n          >\n            {MONTH_NAMES.map(month => (\n              <li\n                onClick={handleHiddenMonthValue}\n                className={css.selectItem}\n                tabIndex=\"0\"\n                id={month}\n                key={month}\n              >\n                {month}\n              </li>\n            ))}\n          </ul>\n\n          <input\n            className={css.hiddenInput}\n            name=\"category\"\n            id=\"category\"\n            placeholder=\"Month\"\n            value={hiddenMonthValue}\n            onChange={handleHiddenMonthValue}\n            required\n          />\n        </div>\n        <div\n          onClick={toggleYearClass}\n          className={css.select}\n          tabIndex=\"0\"\n          id=\"year\"\n        >\n          <div\n            className={\n              hiddenYearValue === 'Year'\n                ? css.selectHeader\n                : [css['selectHeader'], css['isChosen']].join(' ')\n            }\n          >\n            {hiddenYearValue || currentYear}\n          </div>\n\n          <svg className={css.selectIcon} width=\"40\" height=\"19\">\n            <use href={sprite + '#icon-select-arrow'}></use>\n          </svg>\n\n          <ul\n            className={\n              selectYearActive\n                ? [css['selectBody'], css['isActive']].join(' ')\n                : css.selectBody\n            }\n          >\n            {YEARS.map(year => (\n              <li\n                onClick={handleHiddenYearValue}\n                className={css.selectItem}\n                tabIndex=\"0\"\n                id={year}\n                key={year}\n              >\n                {year}\n              </li>\n            ))}\n          </ul>\n\n          <input\n            className={css.hiddenInput}\n            name=\"category\"\n            id=\"category\"\n            placeholder=\"Year\"\n            value={hiddenYearValue}\n            onChange={handleHiddenYearValue}\n            required\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DateSelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"Statistics\":\"StatisticsPage_Statistics__oUcOq\",\"statisticsTitle\":\"StatisticsPage_statisticsTitle__bgxxB\",\"chartWrapper\":\"StatisticsPage_chartWrapper__6PLD7\",\"tableWrapper\":\"StatisticsPage_tableWrapper__1cgUp\",\"selectWrapper\":\"StatisticsPage_selectWrapper__Law7N\",\"noStatisticContainer\":\"StatisticsPage_noStatisticContainer__8EeBr\",\"modalOpenSpan\":\"StatisticsPage_modalOpenSpan__HbGxe\",\"noStatisticMessage\":\"StatisticsPage_noStatisticMessage__BOa98\"};","import StatisticsTable from 'components/StatisticsTable/StatisticsTable';\nimport StatisticsChart from 'components/StatisticsChart/StatisticsChart';\nimport { MONTH } from 'constans/constans';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { financeSelectors, financeOperation } from 'redux/finance';\nimport Modal from 'components/Modal/Modal';\nimport FormAddTransaction from 'components/ModalAddTransactions/ModalAddTransactions';\nimport DateSelect from '../../DateSelect/DateSelect';\nimport scss from './StatisticsPage.module.scss';\n\nconst StatisticsPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const stasticsSummary = useSelector(financeSelectors.getSummary);\n  const { categoriesSummary, expenseSummary, incomeSummary, periodTotal } =\n    stasticsSummary || {};\n\n  const preparedArray = categoriesSummary?.filter(\n    item => item.type === 'EXPENSE'\n  );\n\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth() + 1;\n  const getCurrentMonth = MONTH.getKeyByValue(currentMonth);\n  const currentYear = currentDate.getFullYear();\n\n  useEffect(() => {\n    const monthNumber = MONTH[getCurrentMonth];\n\n    dispatch(\n      financeOperation.getSummaryThunk({\n        month: monthNumber,\n        year: currentYear,\n      })\n    );\n  }, [currentYear, dispatch, getCurrentMonth]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <div className={scss.Statistics}>\n      {categoriesSummary?.length > 0 ? (\n        <>\n          <div className={scss.chartWrapper}>\n            <h2 className={scss.statisticsTitle}>Statistics</h2>\n            {stasticsSummary && (\n              <StatisticsChart\n                statChartData={preparedArray}\n                periodTotal={periodTotal}\n                expenseSummary={expenseSummary}\n                incomeSummary={incomeSummary}\n              />\n            )}\n          </div>\n          <div className={scss.tableWrapper}>\n            <DateSelect />\n            {stasticsSummary && (\n              <StatisticsTable\n                statData={{ preparedArray, incomeSummary, expenseSummary }}\n              />\n            )}\n          </div>\n        </>\n      ) : (\n        <div className={scss.noStatisticContainer}>\n          <h1 className={scss.noStatisticMessage}>\n            You should{' '}\n            <span\n              className={scss.modalOpenSpan}\n              tabIndex=\"1\"\n              onClick={toggleModal}\n            >\n              add the first transaction\n            </span>{' '}\n            to show statistics information\n          </h1>\n          {isModalOpen && (\n            <Modal defaultButton={false} handleToggle={toggleModal}>\n              <FormAddTransaction onClose={toggleModal} />\n            </Modal>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["data","map","idx","name","total","value","type","toString","slice","className","scss","join","style","backgroundColor","BASE_COLORS","statData","expenseSummary","incomeSummary","categoriesSummary","preparedArray","ChartJS","ArcElement","Tooltip","options","cutout","StatisticsChart","statChartData","periodTotal","useState","setData","setBackgroundColor","labels","setLabels","expenseValue","donut","datasets","label","borderWidth","useEffect","nameArr","item","colorsArr","_","index","labelsArr","plugins","beforeDraw","chart","width","height","ctx","restore","fontSize","toFixed","font","textBaseline","text","textX","Math","round","measureText","textY","fillText","save","redraw","selectMonthActive","setSelectMonthActive","selectYearActive","setSelectYearActive","hiddenMonthValue","setHiddenMonthValue","hiddenYearValue","setHiddenYearValue","dispatch","useDispatch","currentDate","Date","currentMonth","getMonth","getCurrentMonth","MONTH","currentYear","getFullYear","handleHiddenMonthValue","event","target","id","handleHiddenYearValue","textContent","Number","monthNumber","financeOperation","month","year","css","onClick","tabIndex","href","sprite","MONTH_NAMES","placeholder","onChange","required","YEARS","isModalOpen","setIsModalOpen","stasticsSummary","useSelector","financeSelectors","filter","toggleModal","length","Modal","defaultButton","handleToggle","onClose"],"sourceRoot":""}